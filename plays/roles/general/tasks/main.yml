---

- name: Configure my environment...
  become: true
  block:
    - name: Updating cache...
      tags: upgrade
      ansible.builtin.apt:
        update_cache: true
        upgrade: yes

    - name: Installing apt packages...
      tags: packages
      ansible.builtin.apt:
        pkg: '{{ apt_packages }}'

    - name: Installing virtualization packages...
      tags: virtualization_packages
      ansible.builtin.apt:
        pkg:
          - virtualbox
          - vagrant

    - name: Installing flatpak packages...
      tags: packages
      community.general.flatpak:
        name: '{{ flatpak_packages }}'

    - name: Adding stable release of i3...
      ansible.builtin.shell: |
        /usr/lib/apt/apt-helper download-file https://debian.sur5r.net/i3/pool/main/s/sur5r-keyring/sur5r-keyring_2023.02.18_all.deb keyring.deb SHA256:a511ac5f10cd811f8a4ca44d665f2fa1add7a9f09bef238cdfad8461f5239cc4
        apt install ./keyring.deb
        echo "deb http://debian.sur5r.net/i3/ $(grep '^DISTRIB_CODENAME=' /etc/lsb-release | cut -f2 -d=) universe" | sudo tee /etc/apt/sources.list.d/sur5r-i3.list
        apt update
        apt install i3

    - name: Installing lazygit...
      ansible.builtin.shell: |
        LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
        curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
        tar xf lazygit.tar.gz lazygit
        install lazygit /usr/local/bin

    - name: Deleting dmenu cache...
      ansible.builtin.file:
        path: '{{ cache_file }}'
        state: absent
      loop:
        - '{{ user_home }}/.cache/dmenu_run'
        - '{{ user_home }}/dmenu_cache'
      loop_control:
        loop_var: cache_file

- name: Installing packages but not with privileges...
  become: true
  become_user: '{{ user }}'
  block:
    - name: Installing pip packages...
      tags: packages
      ansible.builtin.pip:
        name: '{{ pip_packages }}'

    - name: Installing cargo packages...
      tags: packages
      community.general.cargo:
        name: '{{ cargo_packages }}'

    # https://github.com/boyter/scc
    - name: Installing scc (view lines of code)...
      ansible.builtin.shell: |
        go install github.com/boyter/scc/v3@latest

    - name: Linking to .local/bin...
      ansible.builtin.file:
        src: '{{ bin.exe }}'
        dest: '{{ user_home }}/.local/bin/{{ bin.link }}'
        state: link
      loop:
        - exe: '{{ user_home }}/go/bin/scc'
          link: scc
        - exe: '{{ user_home }}/.cargo/bin/sd'
          link: sd
      loop_control:
        loop_var: bin

- name: Configurations...
  become: true
  become_user: '{{ user }}'
  block:
    - name: Installing fonts...
      ansible.builtin.shell: |
        wget -O {{ user_home }}/.local/share/fonts/SourceCodePro.zip https://github.com/ryanoasis/nerd-fonts/releases/download/{{ nerdfont_version }}/SourceCodePro.zip
        unzip -o {{ user_home }}/.local/share/fonts/SourceCodePro.zip -d {{ user_home }}/.local/share/fonts/

    # https://github.com/junegunn/fzf
    - name: Installing fzf...
      ansible.builtin.shell: |
        git clone --depth 1 https://github.com/junegunn/fzf.git {{ user_home }}/.fzf
        {{ user_home }}/.fzf/install

    - name: Cloning bin...
      ansible.builtin.git:
        repo: '{{ bin_repo }}'
        dest: '{{ user_home }}/bin'

    - name: Cloning dotfiles...
      ansible.builtin.git:
        repo: '{{ dotfiles_repo }}'
        dest: '{{ user_home }}/dotfiles'

    - name: Adding dotfiles...
      ansible.builtin.shell: |
        cd {{ user_home }}/dotfiles/
        stow *

    - name: Deleting .wallpapers...
      ansible.builtin.file:
        path: '{{ user_home }}/.wallpapers'
        state: absent

    - name: Dowloading wallpapers...
      ansible.builtin.git:
        repo: '{{ wallpapers_repo }}'
        dest: '{{ user_home }}/.wallpapers'

...
