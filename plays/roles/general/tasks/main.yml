---

- name: Installing root packages...
  become: true
  tags: packages
  block:
    - name: Installing apt packages...
      ansible.builtin.apt:
        pkg: '{{ apt_packages }}'

    - name: Installing virtualization packages...
      tags: virtualization_packages
      ansible.builtin.apt:
        pkg: '{{ virtualization_packages }}'

    - name: Installing flatpak packages...
      community.general.flatpak:
        name: '{{ flatpak_packages }}'

- name: Installing no root packages...
  become: true
  become_user: '{{ user }}'
  tags: packages
  block:
    - name: Installing pip packages...
      ansible.builtin.pip:
        name: '{{ pip_packages }}'

    - name: Installing cargo packages...
      community.general.cargo:
        name: '{{ cargo_packages }}'

    - name: Installing go packages...
      ansible.builtin.shell: '{{ go_packages }}'

- name: All the other stuff...
  become: true
  become_user: '{{ user }}'
  block:
    - name: Installing fonts...
      ansible.builtin.script: ../scripts/fonts.sh

    - name: Installing fzf...
      ansible.builtin.script: ../scripts/fzf.sh

    - name: Installing dunst...
      ansible.builtin.script: ../scripts/dunst.sh

    - name: Installing gtk cursor, icons, themes...
      ansible.builtin.script: ../scripts/gtk.sh

    - name: Adding stable release of i3...
      ansible.builtin.script: ../scripts/i3.sh

    - name: Installing lazygit...
      ansible.builtin.script: ../scripts/lazygit.sh

    - name: Installing ly...
      ansible.builtin.script: ../scripts/ly.sh

    # Repositories
    - name: Creating projects directory...
      ansible.builtin.file:
        path: '{{ user_home }}/projects'
        state: directory
        mode: '1755'

    - name: Deleting .wallpapers because I reset every commit...
      ansible.builtin.file:
        path: '{{ user_home }}/.wallpapers'
        state: absent

    - name: Cloning repositories...
      ansible.builtin.git:
        repo: '{{ repository.repo }}'
        dest: '{{ repository.dest }}'
      loop: '{{ repositories }}'
      loop_control:
        loop_var: repository

    - name: Setting dotfiles...
      ansible.builtin.script: ../scripts/dotfiles.sh

    # Cleaning...
    - name: Deleting dmenu cache...
      ansible.builtin.file:
        path: '{{ cache_file }}'
        state: absent
      loop:
        - '{{ user_home }}/.cache/dmenu_run'
        - '{{ user_home }}/dmenu_cache'
      loop_control:
        loop_var: cache_file

...
