#!/bin/bash
# Print information about your system, this is to not use neofetch
# and to use some tools that I consider more useful (or maybe just fun)
# You can tell this program to print whatever you want.
# It will print default functions defined here and then 'extra_functions'
# defined in $HOME/.config/noneo_extra_functions
# You can tell noneo to just read from the extra functions file with the flag -e
# The functions need to print to stdout in the form of:
# <column1>    :    <column2>
# (The spaces are not necessary)
# And the function needs to be in an array called 'extra_functions'
# For example, write the noneo_extra_functions file as:
# print_me(){
#   echo "hello : world!"
# }
# extra_functions=( print_me )
# And there you have it! Nothing more is required

# Default values
use_cowsay=false
use_lolcat=false
pretty=false
all_random=false
only_extra=false

color_seed="1000"
frequency="0.1"
cow_species="tux"

cowsay_exists=$(which cowsay)
lolcat_exists=$(which lolcat)

logo="
 ███▄    █  ▒█████   ███▄    █ ▓█████  ▒█████
 ██ ▀█   █ ▒██▒  ██▒ ██ ▀█   █ ▓█   ▀ ▒██▒  ██▒
▓██  ▀█ ██▒▒██░  ██▒▓██  ▀█ ██▒▒███   ▒██░  ██▒
▓██▒  ▐▌██▒▒██   ██░▓██▒  ▐▌██▒▒▓█  ▄ ▒██   ██░
▒██░   ▓██░░ ████▓▒░▒██░   ▓██░░▒████▒░ ████▓▒░
░ ▒░   ▒ ▒ ░ ▒░▒░▒░ ░ ▒░   ▒ ▒ ░░ ▒░ ░░ ▒░▒░▒░
░ ░░   ░ ▒ ░ ░ ▒ ▒░ ░ ░░   ░ ▒ ░░ ░  ░  ░ ▒ ▒░
   ░   ░ ░ ░ ░ ░ ▒     ░   ░ ░    ░  ░  ░ ░ ▒
         ░     ░ ░           ░    ░  ░    ░ ░
"

help="-c use colors
-s seed for the colors
-m monochromatic
-d draw a 'cow' to say the information
-C use a particular cow (list all cows with \`cowsay -l\`)
-p blank lines between info functions
-r make all random
-e only show extra functions
-h print this help"

while getopts "cdhpmres:C:" opt; do
    case $opt in
    d) use_cowsay=true ;;
    c) use_lolcat=true ;;
    p) pretty=true ;;
    r) all_random=true ;;
    e) only_extra=true ;;
    s) color_seed="$OPTARG" ;;
    m) frequency="0.0001" ;;
    C) cow_species="$OPTARG" ;;
    h) (echo "$logo" | if [[ -n $lolcat_exists ]]; then lolcat -S 198; else tee; fi) && (echo "$help" |
        if [[ -n $lolcat_exists ]]; then lolcat -F 0.001 -S 1000000; else tee; fi) && exit 0 ;;
    *) echo "Invalid option use -h to see all the options" && exit 1 ;;
    esac
done

if $pretty; then
    util_linux_version=$(column --version | awk '{print $4}')

    if [[ $util_linux_version < "2.37.2" ]]; then
        echo "You have an old version of the column command. You need at least util-linux version 2.37.x" && exit 1
    fi
fi

if $use_cowsay; then
    if [[ -z $cowsay_exists ]]; then
        echo "Install cowsay to draw a cow" && exit 1
    fi
fi

if $use_lolcat; then
    if [[ -z $lolcat_exists ]]; then
        echo "Install lolcat to draw colors" && exit 1
    fi
fi

function user_info() {
    echo "User: $(id | awk '{print $1" "$2}')"
}

function hostname_info() {
    echo "Hostname: $(hostname)"
}

function uname_info() {
    echo "Kernel release: $(uname --kernel-release)"
    #echo "Kernel version: $(uname --kernel-version)"
}

function cpu_info() {
    lscpu | awk -F ':' '/^Architecture|^CPU\(s\)|^Model name/ {print $1":"$2}'
}

function lsb_info() {
    lsb_release -a 2>/dev/null | awk -F ':' '/^Distributor ID|^Description|^Release|^Codename/ {print $1":"$2}'
}

function mem_info() {
    free -h | awk '/^Mem/ {print $1" "$2}'
}

function wmctrl_info() {
    wmctrl_exists="$(which wmctrl)"
    if [[ -n $wmctrl_exists ]]; then
        wmctrl -m | awk '/^Name/ {print "WM "$1" "$2}'
    fi
}

info_functions=(
    'user_info'
    'hostname_info'
    'uname_info'
    'cpu_info'
    'lsb_info'
    'mem_info'
    'wmctrl_info'
)

function get_info() {
    # Get all the info provided by the functions
    # The information is in the format:
    # a: b

    if ! $only_extra; then
        counter=1
        functions_count=${#info_functions[@]}
        for func in "${info_functions[@]}"; do
            eval "$func"
            if $pretty && ((counter < functions_count)); then echo; fi
            counter=$((counter + 1))
        done
    fi

    if [[ -f "$HOME/.config/noneo_extra_functions" ]]; then
        extra_functions=()
        source "$HOME/.config/noneo_extra_functions"
        counter=1
        extra_functions_count="${#extra_functions[@]}"
        for func in "${extra_functions[@]}"; do
            eval "$func"
            if $pretty && ((counter < extra_functions_count)); then echo; fi
            counter=$((counter + 1))
        done
    fi

}

function show_data() {
    get_info | sed --expression="s/\(.*:\)\s*/\1 /g" |
        if [[ -n $pretty ]]; then
            column --keep-empty-lines --table --separator ':'
        else
            column --table --separator ':'
        fi |
        if $all_random; then
            if [[ $COWPATH ]]; then
                farm="$COWPATH"
            else
                farm="/usr/share/cowsay/cows/"
            fi

            # Enter the farm, look for a cow
            cd "$farm" || (echo "The farm does not exist!" && exit 1)
            cows=(*.cow)
            cows_count=${#cows[@]}
            random_cow=$((RANDOM % cows_count))
            chosen_cow="${cows[$random_cow]}"
            random_seed=$((RANDOM % 100000))

            if $use_cowsay; then cowsay -n -f "$chosen_cow"; else tee; fi |
                if $use_lolcat; then lolcat --freq="$frequency" --seed="$random_seed"; else tee; fi
        else
            if $use_cowsay; then cowsay -n -f "$cow_species"; else tee; fi |
                if $use_lolcat; then lolcat --freq="$frequency" --seed="$color_seed"; else tee; fi
        fi
}

show_data
