#!/usr/bin/env bash

function get_curent_workspace() {
    local w oifs name_focused
    oifs="${IFS}"

    IFS=$'\n'
    for w in $(i3-msg -t get_workspaces | jq -r '.[] | "\(.name)::\(.focused)"'); do
        mapfile -t name_focused < <(echo -e "${w//::/\\n}")
        if [[ "${name_focused[1]}" == "true" ]]; then
            echo "${name_focused[0]}"
            break
        fi
    done
    IFS="${oifs}"
}

function move_workspaces_to_primary() {
    local w oifs current_workspace
    oifs="${IFS}"
    current_workspace="$(get_curent_workspace)"

    IFS=$'\n'
    for w in $(i3-msg -t get_workspaces | jq -r .[].name); do
        if [[ "${w}" == "0" ]]; then
            i3-msg -- workspace "${w}"
            i3-msg -- move workspace to output nonprimary
            continue
        fi

        i3-msg -- workspace "${w}"
        i3-msg -- move workspace to output primary
    done
    IFS="${oifs}"

    i3-msg -- workspace "${current_workspace}"
}

function configure_monitors() {
    # Notebook
    if [[ "${monitors[*]}" =~ "eDP-1" ]]; then
        if [[ "${monitors[*]}" =~ "HDMI-1" ]]; then
            xrandr --output "HDMI-1" --primary --auto --left-of "eDP-1"
        else
            xrandr --output "eDP-1" --primary --auto
        fi
    fi

    # Desk
    if [[ "${monitors[*]}" =~ "DisplayPort-2" ]]; then
        if [[ "${monitors[*]}" =~ "HDMI-A-0" ]]; then
            xrandr --output "DisplayPort-2" --primary --auto --right-of "HDMI-A-0"
        else
            xrandr --output "DisplayPort-2" --primary --auto
        fi
    fi

    move_workspaces_to_primary &>> /dev/null
    i3-msg restart &>>/dev/null
}

mapfile -t monitors < <(xrandr | grep " connected" | awk '{print $1}')
configure_monitors

if [[ "${1}" == "-d" ]]; then
    tmp_connected_file=/tmp/monitors_connected
    echo -n "${monitors[*]}" > "${tmp_connected_file}"

    while true; do
        sleep 10

        mapfile -t monitors < <(xrandr | grep " connected" | awk '{print $1}')

        if [[ "${monitors[*]}" != "$(cat "${tmp_connected_file}")" ]]; then
            configure_monitors
            echo -n "${monitors[*]}" > "${tmp_connected_file}"
        fi
    done
fi
